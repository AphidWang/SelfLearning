-- 資料庫架構說明
-- 
-- 此專案使用 Supabase Auth 內建的認證系統，不需要自定義的 users 表。
-- 用戶資料儲存在 auth.users 表的 user_metadata 欄位中。
--
-- auth.users 表結構 (Supabase 內建):
-- - id (uuid, 主鍵)
-- - email (varchar, 唯一)  
-- - encrypted_password (varchar)
-- - email_confirmed_at (timestamptz)
-- - created_at (timestamptz)
-- - updated_at (timestamptz)
-- - raw_user_meta_data (jsonb) - 儲存自定義用戶資料
-- - raw_app_meta_data (jsonb)
-- - last_sign_in_at (timestamptz)
-- - is_super_admin (boolean)
-- - phone (text)
-- - phone_confirmed_at (timestamptz)
-- - confirmed_at (timestamptz, 自動計算)
-- - 其他認證相關欄位...
--
-- user_metadata 結構範例:
-- {
--   "name": "用戶暱稱",
--   "role": "student|mentor|parent|admin", 
--   "avatar": "頭像 URL",
--   "color": "#FF6B6B",
--   "email_verified": true
-- }
--
-- 角色說明:
-- - student: 學生
-- - mentor: 導師/老師
-- - parent: 家長
-- - admin: 管理員
--
-- 注意事項:
-- 1. 用戶創建和管理通過 Supabase Auth API 進行
-- 2. 用戶資料更新使用 supabase.auth.updateUser() 方法
-- 3. RLS (Row Level Security) 由 Supabase Auth 自動處理
-- 4. 無需手動建立 users 表或相關觸發器
-- 5. 用戶認證狀態由 Supabase Auth 自動管理

-- 如果需要額外的業務資料表，可以在此添加
-- 例如: 學習記錄、任務、目標等
-- 這些表應該通過 auth.uid() 函數連接到 auth.users.id

-- 範例: 學習記錄表 (未實作)
-- CREATE TABLE IF NOT EXISTS learning_records (
--   id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
--   user_id UUID REFERENCES auth.users(id) ON DELETE CASCADE,
--   subject VARCHAR(100) NOT NULL,
--   progress INTEGER DEFAULT 0 CHECK (progress >= 0 AND progress <= 100),
--   created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
--   updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
-- );

-- 目前資料庫架構狀態: ✅ 使用 Supabase Auth 原生架構
-- 最後更新: 2025-01-02 